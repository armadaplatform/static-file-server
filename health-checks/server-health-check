#!/usr/bin/env python3
import os
import json
import http.server
import base64
import sys
from collections import Counter

def _get_mounted_volumes():
    restart_args = json.loads(base64.b64decode(os.environ["RESTART_CONTAINER_PARAMETERS"]).decode('utf-8'))
    volumes = []

    for volume in restart_args['volumes']:
        if volume == '/var/run/docker.sock':
            continue

        volumes.append(restart_args['volumes'][volume])

    return volumes

volumes = _get_mounted_volumes()

if len(volumes) == 0:
    print('There were no mounted volumes. Consider adding some -v options to actually serve some files.')
    sys.exit(1)

counter = Counter()

for volume in volumes:
    name = os.path.split(volume.rstrip('/'))[-1]
    counter[name] += 1

found_duplicates = False

for entry in counter:
    if counter[entry] > 1:
        print('Found duplicate share name: {}'.format(entry))
        found_duplicates = True

if found_duplicates:
    print()
    print('Multiple shares have exactly the same name, so only first occurrence is actually exposed. Consider sharing'
          ' symbolic link with distinct name instead.')
    sys.exit(1)

sys.exit(0)
